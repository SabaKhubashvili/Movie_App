generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  name           String
  description    String?
  gender         String
  image          String?
  email          String  @unique
  hashedPassword String

  isAdmin Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model movie {
  id String @id @default(cuid())

  title       String?
  duration    String
  description String
  movieBannerSmall String
  movieBannerBig   String
  movieLink   String
  imbdRating  Int


  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  MovieCast moviecast[]
  movieTags movieTags[]
}

model moviecast {
  id String @id @default(cuid())

  actorId String
  actor   actor  @relation(fields: [actorId], references: [id], onDelete: Cascade)

  movieId String
  movie   movie  @relation(fields: [movieId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model actor {
  id String @id @default(cuid())

  name  String
  image String

  movies moviecast[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model tag {
  id String @id @default(cuid())

  name String

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  movieTags movieTags[]
}

model movieTags {
  id String @id @default(cuid())

  movieId String
  movie   movie  @relation(fields: [movieId], references: [id],onDelete: Cascade)

  tagId String
  tag   tag    @relation(fields: [tagId], references: [id],onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
